import 'package:vidy_app/generated/i18n.dart';
import 'package:flutter/material.dart';
import 'package:fluttertoast/fluttertoast.dart';
import 'package:package_info/package_info.dart';
import 'package:provider/provider.dart';
import 'package:vidy_app/src/pages/about/about_view_model.dart';
import 'package:vidy_app/src/ui/dialog/loading_dialog.dart';
import 'package:vidy_app/src/ui/widgets/loading_widget.dart';
import 'package:vidy_app/src/ui/widgets/menu_list.dart';

class AboutPage extends StatefulWidget {
  @override
  _AboutPageState createState() => _AboutPageState();
}

class _AboutPageState extends State<AboutPage> {
  AboutViewModel _viewModel;

  @override
  void initState() {
    super.initState();
    _viewModel = AboutViewModel();
  }

  @override
  Widget build(BuildContext context) {
    return ChangeNotifierProvider.value(
      value: _viewModel,
      child: Consumer<AboutViewModel>(
        builder: (context, viewModel, child) {
          return LoadingWidget(
            isLoading: viewModel.isLoading,
            child: child,
          );
        },
        child: Scaffold(
          appBar: AppBar(
            title: Text(S.of(context).aboutUs),
            centerTitle: true,
            leading: IconButton(
              icon: Icon(Icons.arrow_back_ios),
              tooltip: MaterialLocalizations.of(context).backButtonTooltip,
              onPressed: () {
                Navigator.maybePop(context);
              },
            ),
          ),
          body: Container(
            padding: EdgeInsets.all(16),
            color: Colors.white,
            child: Column(
              children: <Widget>[
                AspectRatio(
                  aspectRatio: 328 / 136,
                  child: Container(
                    decoration: BoxDecoration(
                      image: DecorationImage(
                        image: AssetImage("assets/images/img_guanyuwomen.png"),
                        fit: BoxFit.cover,
                      ),
                    ),
                    child: Column(
                      children: <Widget>[
                        Expanded(
                          child: Image.asset(
                            "assets/images/logo.png",
                            color: Colors.white,
                            height: 70,
                            width: 70,
                            fit: BoxFit.contain,
                          ),
                        ),
                        AspectRatio(
                          aspectRatio: 328 / 33,
                          child: Container(
                              color: Color(0x66FFFFFF),
                              alignment: Alignment.center,
                              child: VersionWidget()),
                        ),
                      ],
                    ),
                  ),
                ),
                SizedBox(height: 17),
                MenuList(
                  menuData: [
                    {
                      "title": S.of(context).checkForUpdat,
                      "route": () async {
                        await _viewModel.fetchVersion();
                        var versionInfo = _viewModel.fetchVersionResp;
                        PackageInfo packageInfo =
                            await PackageInfo.fromPlatform();

                        if (int.parse(packageInfo.buildNumber) !=
                            versionInfo.versionForAndroid) {
                          showDialog(
                            context: context,
                            builder: (context) => AlertDialog(
                              title: Text(S.of(context).thereIsANewVersionUpdate),
                              content: Text(versionInfo.content),
                              actions: <Widget>[
                                FlatButton(
                                  onPressed: () {
                                    Navigator.pop(context);
                                  },
                                  child: Text(S.of(context).cancel),
                                ),
                                FlatButton(
                                  onPressed: () async {
                                    Navigator.pop(context);
                                    showDialog(
                                        context: context,
                                        builder: (context) => LoadingDialog());
                                    var result =
                                        await _viewModel.downloadPackage();
                                    Navigator.pop(context);
                                    if (result) {
                                      showDialog(
                                        context: context,
                                        builder: (context) => AlertDialog(
                                          title: Text(S.of(context).downloadComplete),
                                          actions: <Widget>[
                                            FlatButton(
                                              onPressed: () {
                                                Navigator.pop(context);
                                              },
                                              child: Text(S.of(context).cancel),
                                            ),
                                            FlatButton(
                                              onPressed: () {},
                                              child: Text(S.of(context).updateNow),
                                            ),
                                          ],
                                        ),
                                      );
                                    } else {
                                      showDialog(
                                        context: context,
                                        builder: (context) => AlertDialog(
                                          title: Text(S.of(context).downloadFailed),
                                          actions: <Widget>[
                                            FlatButton(
                                              child: Text(S.of(context).confirm),
                                              onPressed: () {
                                                Navigator.pop(context);
                                              },
                                            ),
                                          ],
                                        ),
                                      );
                                    }
                                  },
                                  child: Text(S.of(context).downloadImmediately),
                                ),
                              ],
                            ),
                          );
                        } else {
                          Fluttertoast.showToast(
                              msg: "已是最新版本: ${packageInfo.version}");
                        }
                      },
                    },
                    {
                      "title": S.of(context).languageSettin,
                      "route": () {
                        Fluttertoast.showToast(msg: S.of(context).undeveloped);
                      },
                    }
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

class VersionWidget extends StatefulWidget {
  @override
  _VersionWidgetState createState() => _VersionWidgetState();
}

class _VersionWidgetState extends State<VersionWidget> {
  String version = "";

  Future<String> fetchVersion() async {
    PackageInfo packageInfo = await PackageInfo.fromPlatform();
    return packageInfo.version;
  }

  @override
  void initState() {
    super.initState();
    fetchVersion().then((value) {
      setState(() {
        version = "v$value";
      });
    });
  }

  @override
  Widget build(BuildContext context) {
    return Text(
      version,
      style: TextStyle(color: Colors.white),
    );
  }
}
